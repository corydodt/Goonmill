#!/bin/bash

# Run twistd goonmill repeatedly, restarting whenever a source file changes.
echo
echo ^C to kill.
echo

killTwistd() {
    if [ -e goonmill.pid ]; then
        PID=`cat goonmill.pid`
        kill $PID
        echo WAITING ON $PID
        wait $PID
        echo TWISTD DONE.
    fi
}

# this trap will clean up when someone presses ^C
trap killTwistd EXIT

while true; do
  killTwistd
  # Python automatically compiles source files; if we let it do that,
  # dnotify will think something has changed as soon as twistd imports the
  # file that changed, and we'll restart twice.
  # To prevent that, compile this directory now before running.
  echo COMPILING
  python -m compileall . >/dev/null 2>&1
  # Redirect stdin from our tty. If you don't do this, interactive pdb
  # doesn't work.
  twistd -n --pidfile goonmill.pid goonmill < `tty` &
  # and dnotify blocks waiting for anything to change...
  dnotify --once --queue=1 -M $(./sourceFiles) -e echo MODIFIED: "{}"
done

